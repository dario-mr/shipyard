services:
  loki:
    image: grafana/loki:2.9.4
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./grafana/loki/local-config.yaml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    networks: [ backend ]
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:3100/ready" ]
      interval: 30s
      timeout: 5s
      retries: 3
    read_only: true

  promtail:
    image: grafana/promtail:2.9.4
    restart: unless-stopped
    command:
      - -config.file=/etc/promtail/config.yml
      - -config.expand-env=true
    environment:
      DOMAIN: ${DOMAIN}
    volumes:
      - ./grafana/promtail/config.yml:/etc/promtail/config.yml:ro
      - /var/log/caddy:/var/log/caddy:ro
      - promtail_pos:/var/lib/promtail
      - geoipupdate_data:/usr/share/GeoIP:ro
    networks: [ backend ]
    depends_on: [ loki, geoipupdate ]
    read_only: true

  grafana:
    image: grafana/grafana:10.4.5
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_SERVER_ROOT_URL: https://${DOMAIN}/grafana/
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
    networks: [ backend ]
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:3000/api/health" ]
      interval: 30s
      timeout: 5s
      retries: 3
    read_only: true

  geoipupdate:
    image: ghcr.io/maxmind/geoipupdate:v7.1.1
    restart: unless-stopped
    environment:
      GEOIPUPDATE_ACCOUNT_ID: ${GEOIPUPDATE_ACCOUNT_ID}
      GEOIPUPDATE_LICENSE_KEY: ${GEOIPUPDATE_LICENSE_KEY}
      GEOIPUPDATE_EDITION_IDS: GeoLite2-City
      GEOIPUPDATE_FREQUENCY: 3
    networks: [ backend ]
    volumes:
      - geoipupdate_data:/usr/share/GeoIP
    healthcheck:
      test: [ "CMD-SHELL", "[ -f /usr/share/GeoIP/GeoLite2-City.mmdb ] || exit 1" ]
      interval: 30s
      timeout: 5s
      retries: 10