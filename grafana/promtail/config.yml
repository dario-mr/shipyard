server:
  http_listen_port: 0
  grpc_listen_port: 0

clients:
  - url: http://loki:3100/loki/api/v1/push

positions:
  filename: /var/lib/promtail/positions.yaml

scrape_configs:
  - job_name: caddy_access
    static_configs:
      - targets: [ localhost ]
        labels:
          job: caddy_access
          host: ${DOMAIN}
          __path__: /var/log/caddy/access.log
    pipeline_stages:
      - json:
          expressions:
            ts:
            level:
            logger:
            msg:
            request:
            status:
            size:
            duration:
      - json:
          source: request
          expressions:
            remote_ip:
            uri:
            method:
      - geoip:
          db: /usr/share/GeoIP/GeoLite2-City.mmdb
          source: remote_ip
          db_type: city
    relabel_configs:
      - action: labeldrop
        regex: filename

  - job_name: docker_logs
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: [ "loki=true" ]
    relabel_configs:
      - source_labels: [ '__meta_docker_container_log_path' ]
        target_label: '__path__'
      - source_labels: [ '__meta_docker_container_label_app' ]
        target_label: app
      - source_labels: [ '__meta_docker_container_label_logfmt' ]
        target_label: logfmt
    pipeline_stages:
      - docker: { }
      - match:
          selector: '{logfmt="json"}'
          stages:
            - json:
                expressions:
                  level: level
                  logger: logger_name
                  msg: message
                  ts: '["@timestamp"]'
            - labels:
                level:
                logger:
            - output:
                source: msg
            - timestamp:
                source: ts
                format: RFC3339Nano